# syntax=docker/dockerfile:1.5

FROM node:20-slim AS base
ENV NODE_ENV=production
WORKDIR /app

# Install dependencies in a separate layer for caching.
FROM base AS deps
COPY package.json package-lock.json* ./
COPY server/package.json server/package-lock.json* ./server/
COPY .npmrc* ./
RUN npm install --workspaces --workspace server --include-workspace-root=false

# Build stage compiles TypeScript sources into dist/. Until the migration lands we
# fall back to the existing JavaScript entry point.
FROM base AS builder
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/server/node_modules ./server/node_modules
COPY . .
RUN npm run --workspace server build || echo "Skipping server build (JS runtime)"

# Runtime image only carries the compiled output and production deps.
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV PORT=4000

COPY --from=builder /app/server/package.json ./package.json
COPY --from=builder /app/server/dist ./dist 2>/dev/null || true
COPY --from=builder /app/server/src ./src
COPY --from=builder /app/server/node_modules ./node_modules

EXPOSE 4000
CMD ["sh", "-c", "if [ -f dist/index.js ]; then node dist/index.js; else node src/index.js; fi"]
